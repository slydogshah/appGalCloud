{"version":3,"sources":["views/pages/login/LoginForm.js","views/pages/login/Login.js"],"names":["LoginForm","props","mixins","OverlayMixin","state","username","password","isModalOpen","handleChange","bind","handleLogin","event","target","value","name","this","setState","console","log","JSON","stringify","axios","post","then","response","history","push","pathname","data","catch","err","errorData","element","color","closeButton","ReactDOM","unmountComponentAtNode","document","getElementById","render","preventDefault","className","md","type","placeholder","autoComplete","onChange","xs","onClick","id","style","width","to","active","tabIndex","React","Component","withRouter"],"mappings":"uWA+BMA,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAFRC,OAAS,CAACC,KAIR,EAAKC,MAAQ,CAACC,SAAS,GAAGC,SAAS,GAAGC,aAAY,GAClD,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBALF,E,yDAQNE,GACX,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KACpBC,KAAKC,SAAL,eACOF,EAAO,CAACD,O,kCAILF,GAAQ,IAAD,OACjBM,QAAQC,IAAIC,KAAKC,UAAUL,KAAKX,QAGhCiB,IAAMC,KADS,4CACG,CAAC,MAAQP,KAAKX,MAAMC,SAAS,SAAWU,KAAKX,MAAME,WAAWiB,MAAK,SAACC,GAGhF,EAAKvB,MAAMwB,QAAQC,KAAK,CACtBC,SAAU,QACVvB,MAAOoB,EAASI,UAErBC,OAAM,SAAAC,GACF,IAAMC,EAAYZ,KAAKC,UAAUU,EAAIN,SAASI,MAC9CX,QAAQC,IAAIa,GACZ,IAAMC,EACA,cAAC,IAAD,CACAC,MAAM,UACNC,aAAW,EAFX,SAIIH,IAGVI,IAASC,uBAAuBC,SAASC,eAAe,oBACxDH,IAASI,OAAOP,EAAQK,SAASC,eAAe,uBAGvD3B,EAAM6B,mB,+BAIN,OACE,qBAAKC,UAAU,qDAAf,SACM,cAAC,IAAD,UACE,cAAC,KAAD,CAAMA,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOD,UAAU,MAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,uCACA,mBAAGA,UAAU,aAAb,qCACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAO3B,KAAK,iBAGhB,cAAC,IAAD,CAAQ6B,KAAK,OAAOC,YAAY,WAAWC,aAAa,WACxD/B,KAAK,WAAWgC,SAAU/B,KAAKP,kBAEjC,eAAC,IAAD,CAAaiC,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAO3B,KAAK,wBAGhB,cAAC,IAAD,CAAQ6B,KAAK,WAAWC,YAAY,WAAWC,aAAa,mBAC5D/B,KAAK,WAAWgC,SAAU/B,KAAKP,kBAEjC,eAAC,KAAD,WACE,eAAC,IAAD,CAAMuC,GAAG,IAAT,UACI,cAAC,IAAD,CAASd,MAAM,UAAUQ,UAAU,OAAOO,QAASjC,KAAKL,YAAxD,mBACA,qBAAKuC,GAAG,uBAEZ,cAAC,IAAD,CAAMF,GAAG,IAAIN,UAAU,aAAvB,SACE,cAAC,IAAD,CAASR,MAAM,OAAOQ,UAAU,OAAhC,0CAMV,cAAC,IAAD,CAAOA,UAAU,4CAA4CS,MAAO,CAAEC,MAAO,OAA7E,SACE,cAAC,IAAD,CAAWV,UAAU,cAArB,SACE,gCACE,yCACA,6JAEA,cAAC,IAAD,CAAMW,GAAG,YAAT,SACE,cAAC,IAAD,CAASnB,MAAM,UAAUQ,UAAU,OAAOY,QAAM,EAACC,UAAW,EAA5D,mD,GAjGJC,IAAMC,WAuPfC,cAAWzD,GC5QXyD,uBAND,WACZ,OACE,cAAC,EAAD","file":"static/js/48.512a5553.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom'\nimport { withRouter } from \"react-router\";\nimport Modal from 'react-modal';\nimport OverlayMixin from 'react-overlays';\nimport axios from 'axios'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CPopover,\n  CAlert,\n  CProgress,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nclass LoginForm extends React.Component {\n  mixins = [OverlayMixin];\n  constructor(props) {\n    super(props);\n    //console.log(\"Constructor: \"+JSON.stringify(this.props));\n    this.state = {username:'',password:'',isModalOpen:false};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n          [name]: [value]\n    });\n  }\n\n  handleLogin(event) {\n    console.log(JSON.stringify(this.state));\n\n    const apiUrl = 'http://localhost:8080/registration/login/';\n    axios.post(apiUrl,{\"email\":this.state.username,\"password\":this.state.password}).then((response) => {\n          //console.log(JSON.stringify(response.data));\n          //setTimeout(() => {  this.props.history.push(\"/dashboard\"); }, 10000)\n          this.props.history.push({\n            pathname: \"/main\",\n            state: response.data\n          });\n    }).catch(err => {\n           const errorData = JSON.stringify(err.response.data);\n           console.log(errorData);\n           const element = (\n                 <CAlert\n                 color=\"warning\"\n                 closeButton\n                 >\n                    {errorData}\n                </CAlert>\n             );\n           ReactDOM.unmountComponentAtNode(document.getElementById('loginErrorAlert'));\n           ReactDOM.render(element,document.getElementById('loginErrorAlert'));\n    });\n\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"c-app c-default-layout flex-row align-items-center\">\n            <CContainer>\n              <CRow className=\"justify-content-center\">\n                <CCol md=\"8\">\n                  <CCardGroup>\n                    <CCard className=\"p-4\">\n                      <CCardBody>\n                        <CForm>\n                          <h1>Login</h1>\n                          <p className=\"text-muted\">Sign In to your account</p>\n                          <CInputGroup className=\"mb-3\">\n                            <CInputGroupPrepend>\n                              <CInputGroupText>\n                                <CIcon name=\"cil-user\" />\n                              </CInputGroupText>\n                            </CInputGroupPrepend>\n                            <CInput type=\"text\" placeholder=\"Username\" autoComplete=\"username\"\n                            name=\"username\" onChange={this.handleChange}/>\n                          </CInputGroup>\n                          <CInputGroup className=\"mb-4\">\n                            <CInputGroupPrepend>\n                              <CInputGroupText>\n                                <CIcon name=\"cil-lock-locked\" />\n                              </CInputGroupText>\n                            </CInputGroupPrepend>\n                            <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\"\n                            name=\"password\" onChange={this.handleChange}/>\n                          </CInputGroup>\n                          <CRow>\n                            <CCol xs=\"6\">\n                                <CButton color=\"primary\" className=\"px-4\" onClick={this.handleLogin}>Login</CButton>\n                                <div id=\"loginErrorAlert\"></div>\n                            </CCol>\n                            <CCol xs=\"6\" className=\"text-right\">\n                              <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\n                            </CCol>\n                          </CRow>\n                        </CForm>\n                      </CCardBody>\n                    </CCard>\n                    <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                      <CCardBody className=\"text-center\">\n                        <div>\n                          <h2>Sign up</h2>\n                          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                            labore et dolore magna aliqua.</p>\n                          <Link to=\"/register\">\n                            <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\n                          </Link>\n                        </div>\n                      </CCardBody>\n                    </CCard>\n                  </CCardGroup>\n                </CCol>\n              </CRow>\n            </CContainer>\n          </div>\n    );\n  }\n}\n\n\n/*import React, { useState } from 'react'\nimport { withRouter } from \"react-router\";\nimport { DocsLink } from 'src/reusable'\nimport { Link } from 'react-router-dom'\nimport Modal from 'react-modal';\nimport OverlayMixin from 'react-overlays';\nimport axios from 'axios'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CPopover,\n  CAlert,\n  CProgress,\n  CCardHeader,\n  CLink,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nclass LoginForm extends React.Component {\n    mixins = [OverlayMixin];\n    constructor(props)\n    {\n        super(props);\n        this.state = {isModalOpen:false};\n    }\n\n    handleToggle() {\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n      });\n    }\n\n    render(){\n      return (\n          <div className=\"c-app c-default-layout flex-row align-items-center\">\n                          <CContainer>\n                            <CRow className=\"justify-content-center\">\n                              <CCol md=\"8\">\n                                <CCardGroup>\n                                  <CCard className=\"p-4\">\n                                    <CCardBody>\n                                      <CForm>\n                                        <h1>Login</h1>\n                                        <p className=\"text-muted\">Sign In to your account</p>\n                                        <CInputGroup className=\"mb-3\">\n                                          <CInputGroupPrepend>\n                                            <CInputGroupText>\n                                              <CIcon name=\"cil-user\" />\n                                            </CInputGroupText>\n                                          </CInputGroupPrepend>\n                                          <CInput type=\"text\" placeholder=\"Username\" autoComplete=\"username\"\n                                          name=\"username\"/>\n                                        </CInputGroup>\n                                        <CInputGroup className=\"mb-4\">\n                                          <CInputGroupPrepend>\n                                            <CInputGroupText>\n                                              <CIcon name=\"cil-lock-locked\" />\n                                            </CInputGroupText>\n                                          </CInputGroupPrepend>\n                                          <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\"\n                                          name=\"password\"/>\n                                        </CInputGroup>\n                                        <CRow>\n                                          <CCol xs=\"6\">\n                                          <CButton color=\"primary\" className=\"px-4\" onClick={this.handleToggle}>Login</CButton>\n                                          <CAlert\n                                              className=\"loginErrorAlert\"\n                                              color=\"warning\"\n                                              closeButton\n                                            >\n                                              Login Failed\n                                            </CAlert>\n                                          </CCol>\n                                          <CCol xs=\"6\" className=\"text-right\">\n                                            <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\n                                          </CCol>\n                                        </CRow>\n                                      </CForm>\n                                    </CCardBody>\n                                  </CCard>\n                                  <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                                    <CCardBody className=\"text-center\">\n                                      <div>\n                                        <h2>Sign up</h2>\n                                        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                                          labore et dolore magna aliqua.</p>\n                                        <Link to=\"/register\">\n                                          <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\n                                        </Link>\n                                      </div>\n                                    </CCardBody>\n                                  </CCard>\n                                </CCardGroup>\n                              </CCol>\n                            </CRow>\n                          </CContainer>\n                        </div>\n      );\n  }\n}*/\n\n/*class LoginErrorAlert extends React.Component {\n    constructor(props)\n    {\n        super(props);\n    }\n\n    render()\n        {\n          return(\n                <CAlert\n                 color=\"warning\"\n                 closeButton\n                 >\n                 I will be closed in seconds!\n               </CAlert>\n          );\n        }\n}*/\n\nexport default withRouter(LoginForm)","import React from 'react'\nimport { withRouter } from \"react-router\";\nimport LoginForm from './LoginForm';\n\nconst Login = () => {\n  return (\n    <LoginForm/>\n  )\n}\n\nexport default withRouter(Login)\n"],"sourceRoot":""}