{"version":3,"sources":["application/Main.js"],"names":["usersData","id","name","registered","role","status","fields","key","_style","width","label","sorter","filter","getBadge","Main","props","items","columnFilter","tableFilter","footer","itemsPerPageSelect","itemsPerPage","hover","pagination","scopedSlots","item","color","index","className","variant","shape","size","onClick","history","axios","post","then","response","push","pathname","state","data","React","Component","withRouter"],"mappings":"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","file":"static/js/45.cb2d234a.chunk.js","sourcesContent":["import React from 'react'\nimport { useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport axios from 'axios'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CCollapse\n} from '@coreui/react'\n\nconst usersData = [\n    {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending'},\n    {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', status: 'Active'},\n    {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n    {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n    {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n    {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n    {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active'},\n    {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n    {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n    {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n    {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n    {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\n    {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n    {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n    {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n    {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n    {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\n    {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n    {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n    {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n    {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n    {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\n    {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n    {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n    {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'}\n  ]\n\nconst fields = [\n          { key: 'name', _style: { width: '40%'} },\n          'registered',\n          { key: 'role', _style: { width: '20%'} },\n          { key: 'status', _style: { width: '20%'} },\n          {\n            key: 'show_details',\n            label: '',\n            _style: { width: '1%' },\n            sorter: false,\n            filter: false\n          }\n      ]\n\nconst getBadge = (status)=>{\n         switch (status) {\n           case 'Active': return 'success'\n           case 'Inactive': return 'secondary'\n           case 'Pending': return 'warning'\n           case 'Banned': return 'danger'\n           default: return 'primary'\n         }\n     }\n\nconst handle = (history) => {\n    const apiUrl = 'http://localhost:8080/registration/login/';\n    axios.post(apiUrl,{\"email\":\"Do\",\"password\":\"do\",\"statusCode\":null,\"profile\":null}).then((response) => {\n          history.push({\n            pathname: \"/schedulePickup\",\n            state: response.data\n            });\n    });\n    //alert('BLAh');\n}\n\nclass Main extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    render()\n    {\n        return(\n           <CDataTable\n                  items={usersData}\n                  fields={fields}\n                  columnFilter\n                  tableFilter\n                  footer\n                  itemsPerPageSelect\n                  itemsPerPage={50}\n                  hover\n                  sorter\n                  pagination\n                  scopedSlots = {{\n                    'status':\n                      (item)=>(\n                        <td>\n                          <CBadge color={getBadge(item.status)}>\n                            {item.status}\n                          </CBadge>\n                        </td>\n                      ),\n                    'show_details':\n                      (item, index)=>{\n                        return (\n                          <td className=\"py-2\">\n                            <CButton\n                              color=\"primary\"\n                              variant=\"outline\"\n                              shape=\"square\"\n                              size=\"sm\"\n                              onClick={()=>{handle(this.props.history)}}\n                            >\n                              {'Show'}\n                            </CButton>\n                          </td>\n                          )\n                      }\n                   }}\n                />\n        );\n    }\n}\n\nexport default withRouter(Main)\n\n/*\nconst [details, setDetails] = useState([])\n\n  const toggleDetails = (index) => {\n      const position = details.indexOf(index)\n      let newDetails = details.slice()\n      if (position !== -1) {\n        newDetails.splice(position, 1)\n      } else {\n        newDetails = [...details, index]\n      }\n      setDetails(newDetails)\n  }\n\n\n  const fields = [\n      { key: 'name', _style: { width: '40%'} },\n      'registered',\n      { key: 'role', _style: { width: '20%'} },\n      { key: 'status', _style: { width: '20%'} },\n      {\n        key: 'show_details',\n        label: '',\n        _style: { width: '1%' },\n        sorter: false,\n        filter: false\n      }\n  ]\n\n  const getBadge = (status)=>{\n      switch (status) {\n        case 'Active': return 'success'\n        case 'Inactive': return 'secondary'\n        case 'Pending': return 'warning'\n        case 'Banned': return 'danger'\n        default: return 'primary'\n      }\n  }\n*/\n\n /*\n <CDataTable\n       items={usersData}\n       fields={fields}\n       columnFilter\n       tableFilter\n       footer\n       itemsPerPageSelect\n       itemsPerPage={5}\n       hover\n       sorter\n       pagination\n       scopedSlots = {{\n         'status':\n           (item)=>(\n             <td>\n               <CBadge color={getBadge(item.status)}>\n                 {item.status}\n               </CBadge>\n             </td>\n           ),\n         'show_details':\n           (item, index)=>{\n             return (\n               <td className=\"py-2\">\n                 <CButton\n                   color=\"primary\"\n                   variant=\"outline\"\n                   shape=\"square\"\n                   size=\"sm\"\n                   onClick={()=>{toggleDetails(index)}}\n                 >\n                   {details.includes(index) ? 'Hide' : 'Show'}\n                 </CButton>\n               </td>\n               )\n           },\n         'details':\n             (item, index)=>{\n               return (\n               <CCollapse show={details.includes(index)}>\n                 <CCardBody>\n                   <h4>\n                     {item.username}\n                   </h4>\n                   <p className=\"text-muted\">User since: {item.registered}</p>\n                   <CButton size=\"sm\" color=\"info\">\n                     User Settings\n                   </CButton>\n                   <CButton size=\"sm\" color=\"danger\" className=\"ml-1\">\n                     Delete\n                   </CButton>\n                 </CCardBody>\n               </CCollapse>\n             )\n           }\n       }}\n     />\n*/"],"sourceRoot":""}